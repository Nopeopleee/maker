// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model languages {
  id         Int         @id @default(autoincrement())
  code       String      @unique
  name       String
  status     Boolean     @default(true)
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  menus      menus[]
  homepages  homepages[]
}

model admins {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  name       String?
  password   String?
  status     Boolean      @default(true)
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  audit_logs audit_logs[]
}

model audit_logs {
  id         Int      @id @default(autoincrement())
  admin      admins?  @relation(fields: [admin_id], references: [id], onDelete: SetNull)
  admin_id   Int?
  action     String
  message    String
  ip         String
  created_at DateTime @default(now())
}

model users {
  id               Int                @id @default(autoincrement())
  account          String             @unique
  name             String?
  password         String?
  status           Boolean            @default(true)
  created_at       DateTime           @default(now())
  updated_at       DateTime           @updatedAt
  user_logs        user_logs[]
  user_permissions user_permissions[]
}

model user_logs {
  id         Int      @id @default(autoincrement())
  user       users?   @relation(fields: [user_id], references: [id], onDelete: SetNull)
  user_id    Int?
  action     String
  message    String
  ip         String
  created_at DateTime @default(now())
}

model user_permissions {
  id         Int      @id @default(autoincrement())
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model menus {
  id             Int            @id @default(autoincrement())
  language       languages?     @relation(fields: [language_id], references: [id], onDelete: Cascade)
  language_id    Int?           @default(1)
  parent_menu_id Int?
  parent_menu    menus?         @relation("ParentChild", fields: [parent_menu_id], references: [id], onDelete: Cascade)
  child_menus    menus[]        @relation("ParentChild")
  alias          String         @unique
  title          String
  link           String?
  image          String?
  type           Int            @db.UnsignedTinyInt
  level          Int            @default(0)
  order          Int            @default(0)
  status         Boolean        @default(true)
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  cms_content    cms_contents[]
}

model homepages {
  id           Int            @id @default(autoincrement())
  language     languages?     @relation(fields: [language_id], references: [id], onDelete: SetNull)
  language_id  Int?           @default(1)
  type         Int            @db.UnsignedTinyInt
  status       Boolean        @default(true)
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  home_details home_details[]
}

model home_details {
  id          Int       @id @default(autoincrement())
  homepage    homepages @relation(fields: [homepage_id], references: [id], onDelete: Cascade)
  homepage_id Int
  type        Int       @db.UnsignedTinyInt
  title       String?
  content     String?   @db.Text
  image       String?
  image_alt   String?
  link        String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
}

model cms_contents {
  id         Int      @id @default(autoincrement())
  menu       menus    @relation(fields: [menu_id], references: [id], onDelete: Cascade)
  menu_id    Int
  alias      String   @unique
  title      String
  content    String   @db.Text
  status     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model settings {
  id         Int      @id @default(autoincrement())
  type       Int      @db.UnsignedTinyInt
  name       String   @unique
  value      String
  status     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model previews {
  id         Int      @id @default(autoincrement())
  data       String   @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
